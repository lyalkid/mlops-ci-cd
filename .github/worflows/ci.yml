name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  PYTHONPATH: ${{ github.workspace }}
  MODEL_PATH: src/models/model.joblib
  DOCKER_IMAGE: ghcr.io/${{ github.repository_owner }}/mlops-ci-cd

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest flake8

      - name: 🧹 Lint with flake8
        run: flake8 src tests

      - name: 🧪 Run tests
        run: pytest -v tests/

      - name: 🤖 Train model
        run: |
          mkdir -p src/models
          python src/train.py

      - name: 📦 Upload model artifact
        uses: actions/upload-artifact@v4
        with:
          name: model
          path: ${{ env.MODEL_PATH }}

  deploy-to-yc:
    needs: test-and-build
    runs-on: ubuntu-latest
    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@v4

      - name: 📥 Download model
        uses: actions/download-artifact@v4
        with:
          name: model
          path: src/models

      - name: 🐳 Build Docker image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }} .

      - name: 🔐 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🚀 Push to GHCR
        run: docker push ${{ env.DOCKER_IMAGE }}

      - name: ⬇️ Install YC CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "$HOME/yandex-cloud/bin" >> $GITHUB_PATH
          yc --version

      - name: 🔑 Configure YC CLI
        run: |
          echo "${{ secrets.YC_SA_KEY }}" > sa-key.json
          yc config set service-account-key sa-key.json
          yc config set cloud-id ${{ secrets.YC_CLOUD_ID }}
          yc config set folder-id ${{ secrets.YC_FOLDER_ID }}
          yc container registry configure-docker

      - name: 🛠 Create container if not exists
        run: |
          yc serverless container get --name mlops-ci-cd || \
          yc serverless container create --name mlops-ci-cd

      - name: 🐳 Pull and tag image
        run: |
          docker pull ${{ env.DOCKER_IMAGE }}
          docker tag ${{ env.DOCKER_IMAGE }} cr.yandex/${{ secrets.YC_REGISTRY_ID }}/mlops-ci-cd:latest

      - name: 📤 Push to Yandex Container Registry
        run: |
          docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/mlops-ci-cd:latest

      - name: 🚀 Deploy to Yandex Cloud
        run: |
          yc serverless container revision deploy \
            --container-name mlops-ci-cd \
            --image cr.yandex/${{ secrets.YC_REGISTRY_ID }}/mlops-ci-cd:latest \
            --cores 1 \
            --memory 1GB \
            --concurrency 4 \
            --execution-timeout 30s \
            --service-account-id ${{ secrets.YC_SA_ID }}

      - name: 🌍 Make public
        run: yc serverless container allow-unauthenticated-invoke mlops-ci-cd