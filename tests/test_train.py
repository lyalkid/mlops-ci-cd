import os
from pathlib import Path


def test_model_training():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –º–æ–¥–µ–ª—å –æ–±—É—á–∞–µ—Ç—Å—è –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è."""
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ –ø—É—Ç—å, —á—Ç–æ –∏ –≤ train.py
    MODEL_DIR = Path(__file__).parent.parent / "src" / "models"
    MODEL_PATH = MODEL_DIR / "model.joblib"

    print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è—é –ø—É—Ç—å –∫ –º–æ–¥–µ–ª–∏: {MODEL_PATH}")
    print(f"   –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å: {MODEL_PATH.absolute()}")

    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –º–æ–¥–µ–ª—å, –µ—Å–ª–∏ –µ—Å—Ç—å
    if MODEL_PATH.exists():
        print("üóë –£–¥–∞–ª—è—é —Å—Ç–∞—Ä—É—é –º–æ–¥–µ–ª—å")
        os.remove(MODEL_PATH)

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É
    from src.train import model, X_test, y_test, MODEL_PATH as TRAIN_MODEL_PATH

    print(f"üîÑ –ü—É—Ç—å –≤ train.py: {TRAIN_MODEL_PATH}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–¥–µ–ª—å –æ–±—É—á–µ–Ω–∞
    assert model is not None, "–ú–æ–¥–µ–ª—å –Ω–µ –æ–±—É—á–µ–Ω–∞"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    print("üîé –ü—Ä–æ–≤–µ—Ä—è—é —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏...")
    print(f"   –ü—É—Ç—å: {TRAIN_MODEL_PATH}")
    print(f"   –°—É—â–µ—Å—Ç–≤—É–µ—Ç: {os.path.exists(TRAIN_MODEL_PATH)}")

    assert os.path.exists(
        TRAIN_MODEL_PATH), f"–ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ –ø—É—Ç–∏: {TRAIN_MODEL_PATH}"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
    y_pred = model.predict(X_test)
    assert len(y_pred) == len(y_test), "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç"
